// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RiversideFishhut.API.Data;

#nullable disable

namespace RiversideFishhut.API.Migrations
{
    [DbContext(typeof(RiversideFishhutDbContext))]
    partial class RiversideFishhutDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RiversideFishhut.API.Data.BusinessHour", b =>
                {
                    b.Property<int>("BusinessHourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessHourId"), 1L, 1);

                    b.Property<string>("BusinessTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BusinessHourId");

                    b.ToTable("businessHours");

                    b.HasData(
                        new
                        {
                            BusinessHourId = 1,
                            BusinessTime = "Closed",
                            DayOfWeek = "Monday"
                        },
                        new
                        {
                            BusinessHourId = 2,
                            BusinessTime = "09:00 - 17:00",
                            DayOfWeek = "Tuesday"
                        },
                        new
                        {
                            BusinessHourId = 3,
                            BusinessTime = "09:00 - 17:00",
                            DayOfWeek = "Wednesday"
                        },
                        new
                        {
                            BusinessHourId = 4,
                            BusinessTime = "09:00 - 17:00",
                            DayOfWeek = "Thursday"
                        },
                        new
                        {
                            BusinessHourId = 5,
                            BusinessTime = "09:00 - 17:00",
                            DayOfWeek = "Friday"
                        },
                        new
                        {
                            BusinessHourId = 6,
                            BusinessTime = "09:00 - 17:00",
                            DayOfWeek = "Saturday"
                        },
                        new
                        {
                            BusinessHourId = 7,
                            BusinessTime = "Closed",
                            DayOfWeek = "Sunday"
                        });
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Main Dish",
                            Name = "2 PC Dinner"
                        });
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.FoodType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.HasIndex("ProductId");

                    b.ToTable("foodTypes");

                    b.HasData(
                        new
                        {
                            TypeId = 1,
                            Description = "This type is for 2 Pc fish with 1 pack chip.",
                            TypeName = "2 PC Dinner"
                        },
                        new
                        {
                            TypeId = 2,
                            Description = "This is fish.",
                            TypeName = "Fish "
                        },
                        new
                        {
                            TypeId = 3,
                            Description = "This product has discount right now.",
                            TypeName = "Deal"
                        });
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("AltName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Dine_in_price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Take_out_price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            AltName = "2 PC W/C",
                            CategoryId = 1,
                            Description = "Description",
                            Dine_in_price = 10m,
                            ProductName = "2Pc Whitefish & Chips",
                            Take_out_price = 9m
                        },
                        new
                        {
                            ProductId = 2,
                            AltName = "2 PC COD/C",
                            CategoryId = 1,
                            Description = "Description",
                            Dine_in_price = 12m,
                            ProductName = "2Pc Cod & Chips",
                            Take_out_price = 11m
                        },
                        new
                        {
                            ProductId = 3,
                            AltName = "2 PC HDK/C",
                            CategoryId = 1,
                            Description = "Description",
                            Dine_in_price = 14m,
                            ProductName = "2Pc Haddock & Chips",
                            Take_out_price = 13m
                        },
                        new
                        {
                            ProductId = 4,
                            AltName = "2PC HB/C",
                            CategoryId = 1,
                            Description = "Description",
                            Dine_in_price = 16m,
                            ProductName = "2Pc Halibut & Chips",
                            Take_out_price = 15m
                        });
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.ProductFoodType", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("productFoodTypes");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            TypeId = 1
                        },
                        new
                        {
                            ProductId = 1,
                            TypeId = 2
                        },
                        new
                        {
                            ProductId = 1,
                            TypeId = 3
                        },
                        new
                        {
                            ProductId = 2,
                            TypeId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            TypeId = 2
                        },
                        new
                        {
                            ProductId = 2,
                            TypeId = 3
                        },
                        new
                        {
                            ProductId = 3,
                            TypeId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            TypeId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            TypeId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            TypeId = 1
                        },
                        new
                        {
                            ProductId = 4,
                            TypeId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleDescription = "Administrator",
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleDescription = "Staff member",
                            RoleName = "Staff"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleDescription = "Waiter",
                            RoleName = "Waiter"
                        });
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffId");

                    b.HasIndex("RoleId");

                    b.ToTable("staffs");

                    b.HasData(
                        new
                        {
                            StaffId = 1,
                            Email = "asdsad@gmail.com",
                            Password = "Password1",
                            RoleId = 1,
                            StaffName = "Staff 1"
                        },
                        new
                        {
                            StaffId = 2,
                            Email = "sad@gmail.com",
                            Password = "Password2",
                            RoleId = 2,
                            StaffName = "Staff 2"
                        });
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.WebsiteInfo", b =>
                {
                    b.Property<int>("InfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InfoId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OnlineOrderLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InfoId");

                    b.ToTable("websiteInfos");

                    b.HasData(
                        new
                        {
                            InfoId = 1,
                            Address = "157 king st west Cambridge, ON, N3H 1B5",
                            Description = "This cozy restaurant specializes in traditional English fish and French fries, serving up freshly fried, crispy and flavorful fish sourced from local suppliers, and thick golden fries that make the perfect side dish.",
                            LogoImage = "Logo name",
                            OnlineOrderLink = "https://www.skipthedishes.com/riverside-fish-hut?utm_source=riversidefishhutmenu.ca&utm_medium=microsites&utm_campaign=microsites",
                            PhoneNumber = "519-653-0788",
                            StoreName = "Riverside Fishhut"
                        });
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.FoodType", b =>
                {
                    b.HasOne("RiversideFishhut.API.Data.Product", null)
                        .WithMany("FoodTypes")
                        .HasForeignKey("ProductId");
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.Product", b =>
                {
                    b.HasOne("RiversideFishhut.API.Data.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.ProductFoodType", b =>
                {
                    b.HasOne("RiversideFishhut.API.Data.Product", "Product")
                        .WithMany("ProductFoodTypes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RiversideFishhut.API.Data.FoodType", "FoodType")
                        .WithMany("ProductFoodTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("FoodType");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.Staff", b =>
                {
                    b.HasOne("RiversideFishhut.API.Data.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.FoodType", b =>
                {
                    b.Navigation("ProductFoodTypes");
                });

            modelBuilder.Entity("RiversideFishhut.API.Data.Product", b =>
                {
                    b.Navigation("FoodTypes");

                    b.Navigation("ProductFoodTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
